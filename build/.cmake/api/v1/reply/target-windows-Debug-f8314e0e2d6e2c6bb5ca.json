{
	"artifacts" : 
	[
		{
			"path" : "external/glfw-3.3/tests/windows.exe"
		},
		{
			"path" : "external/glfw-3.3/tests/windows.pdb"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"add_definitions",
			"include_directories"
		],
		"files" : 
		[
			"external/glfw-3.3/tests/CMakeLists.txt",
			"external/CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 43,
				"parent" : 0
			},
			{
				"file" : 1
			},
			{
				"command" : 1,
				"file" : 1,
				"line" : 33,
				"parent" : 2
			},
			{
				"command" : 2,
				"file" : 1,
				"line" : 41,
				"parent" : 2
			},
			{
				"command" : 2,
				"file" : 1,
				"line" : 45,
				"parent" : 2
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 4,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : " -D_FORTIFY_SOURCE=2 -D_WIN32_WINNT=0x0601 -DWIN32_WINNT=0x0601 -DWINVER=0x0601 -ftree-vectorize -fopt-info-vec -funroll-loops -fomit-frame-pointer -fstack-protector-strong -fpic -fpie -pie -Wdeprecated-declarations -pthread -mavx2 -Ofast --static -fcf-protection=full -mshstk -march=native -g"
				}
			],
			"defines" : 
			[
				{
					"backtrace" : 3,
					"define" : "GLEW_STATIC"
				},
				{
					"backtrace" : 3,
					"define" : "TW_NO_DIRECT3D"
				},
				{
					"backtrace" : 3,
					"define" : "TW_NO_LIB_PRAGMA"
				},
				{
					"backtrace" : 3,
					"define" : "TW_STATIC"
				},
				{
					"backtrace" : 3,
					"define" : "_CRT_SECURE_NO_WARNINGS"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 4,
					"path" : "D:/OpenGL/external/stb/include"
				},
				{
					"backtrace" : 5,
					"path" : "D:/OpenGL/external/godot/crash_handler/include"
				},
				{
					"backtrace" : 6,
					"path" : "D:/OpenGL/external/glfw-3.3/deps/mingw"
				},
				{
					"backtrace" : 6,
					"path" : "D:/OpenGL/external/glfw-3.3/deps"
				},
				{
					"backtrace" : 1,
					"path" : "D:/OpenGL/external/glfw-3.3/include"
				}
			],
			"language" : "C",
			"sourceIndexes" : 
			[
				0,
				2,
				4
			]
		}
	],
	"dependencies" : 
	[
		{
			"backtrace" : 1,
			"id" : "glfw::@d23da7579923f4053477"
		}
	],
	"folder" : 
	{
		"name" : "GLFW3/Tests"
	},
	"id" : "windows::@e12a863f101f08e490f1",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-D_FORTIFY_SOURCE=2 -D_WIN32_WINNT=0x0601 -DWIN32_WINNT=0x0601 -DWINVER=0x0601 -ftree-vectorize -fopt-info-vec -funroll-loops -fomit-frame-pointer -fstack-protector-strong -fpic -fpie -pie -Wdeprecated-declarations -pthread -mavx2 -Ofast --static -fcf-protection=full -mshstk -march=native -g",
				"role" : "flags"
			},
			{
				"fragment" : "-Wl,--nxcompat -flto -Wl,--gc-sections -Wl,-Map=memory_map.map  -mwindows",
				"role" : "flags"
			},
			{
				"backtrace" : 1,
				"fragment" : "..\\src\\libglfw3.a",
				"role" : "libraries"
			},
			{
				"fragment" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32",
				"role" : "libraries"
			}
		],
		"language" : "C"
	},
	"name" : "windows",
	"nameOnDisk" : "windows.exe",
	"paths" : 
	{
		"build" : "external/glfw-3.3/tests",
		"source" : "external/glfw-3.3/tests"
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				2,
				4
			]
		},
		{
			"name" : "Header Files",
			"sourceIndexes" : 
			[
				1,
				3
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "external/glfw-3.3/tests/windows.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "external/glfw-3.3/deps/getopt.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "external/glfw-3.3/deps/getopt.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "external/glfw-3.3/deps/glad/gl.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "external/glfw-3.3/deps/glad_gl.c",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
